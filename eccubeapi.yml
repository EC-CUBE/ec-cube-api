swagger: '2.0'
# This is your document metadata
info:
  version: "0"
  title: EC-CUBE API
  description: |
    EC-CUBEで公開しているAPI一覧です。

    使い方などはこちらをご覧ください。[here](https://ec-cube.github.io/api)
# ドメイン名を入力
host: <your-host-name>
basePath: <base-path>/
tags:
  - name: CRUD
    description: Create, Read, Update, Delete Operations.
  - name: Authorization
    description: OAuth2.0 and OpenID Connect Authorizations.
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - eccubeOpenIDConnectImplicit:
    - openid
    - offline_access
    - profile
    - email
    - address
    - phone
    - csv_type_read
    - customer_order_status_read
    - customer_status_read
    - db_read
    - device_type_read
    - disp_read
    - job_read
    - order_status_read
    - order_status_color_read
    - page_max_read
    - pref_read
    - product_list_max_read
    - product_list_order_by_read
    - product_type_read
    - sex_read
    - tag_read
    - taxrule_read
    - work_read
    - shipment_item_read
    - shipping_read
    - tax_rule_read
    - template_read
    - authority_role_read
    - base_info_read
    - block_read
    - block_position_read
    - category_read
    - class_category_read
    - class_name_read
    - csv_read
    - customer_read
    - customer_address_read
    - customer_favorite_product_read
    - delivery_read
    - delivery_date_read
    - delivery_fee_read
    - delivery_time_read
    - help_read
    - mail_history_read
    - mail_template_read
    - member_read
    - news_read
    - order_read
    - order_detail_read
    - page_layout_read
    - payment_read
    - payment_option_read
    - plugin_read
    - plugin_event_handler_read
    - product_read
    - product_category_read
    - product_class_read
    - product_image_read
    - product_stock_read
    - product_tag_read
    - csv_type_write
    - customer_order_status_write
    - customer_status_write
    - db_write
    - device_type_write
    - disp_write
    - job_write
    - order_status_write
    - order_status_color_write
    - page_max_write
    - pref_write
    - product_list_max_write
    - product_list_order_by_write
    - product_type_write
    - sex_write
    - tag_write
    - taxrule_write
    - work_write
    - shipment_item_write
    - shipping_write
    - tax_rule_write
    - template_write
    - authority_role_write
    - base_info_write
    - block_write
    - block_position_write
    - category_write
    - class_category_write
    - class_name_write
    - csv_write
    - customer_write
    - customer_address_write
    - customer_favorite_product_write
    - delivery_write
    - delivery_date_write
    - delivery_fee_write
    - delivery_time_write
    - help_write
    - mail_history_write
    - mail_template_write
    - member_write
    - news_write
    - order_write
    - order_detail_write
    - page_layout_write
    - payment_write
    - payment_option_write
    - plugin_write
    - plugin_event_handler_write
    - product_write
    - product_category_write
    - product_class_write
    - product_image_write
    - product_stock_write
    - product_tag_write
# Describe your paths here
paths:
  /<base-endpoint>/<base-version>/product:
    get:
      tags:
        - CRUD
      description: dtb_product の一覧を取得します。
      parameters:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: array
            items:
              title: product
              type: object
              schema:
                $ref: '#/definitions/product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
      # security:
      #   - eccubeOAuth2Implicit:
      #       - product_read
      #   - eccubeOAuth2AuthorizationCode:
      #       - product_read
      #   - eccubeOpenIDConnectImplicit:
      #       - product_read
      #   - eccubeOpenIDConnectAuthorizationCode:
      #       - product_read
    post:
      tags:
        - CRUD
      description: dtb_product を生成します。
      parameters:
        -
          in: body
          name: body
          description: Product object that needs to be added to the EC-CUBE.
          required: true
          schema:
            type: object
            required:
              - name
              - Creator
            properties:
              name:
                type: string
                example: 商品名
              note:
                type: string
                example: 備考
              description_list:
                type: string
                example: 商品一覧に表示する説明
              description_detail:
                type: string
                example: 商品詳細に表示する説明
              search_word:
                type: string
                example: 検索キーワード
              free_area:
                type: string
                example: フリーワード
              del_flg:
                type: integer
                format: int16
              Creator:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 2
              Status:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
      responses:
        # Response code
        201:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
      # security:
      #   - eccubeOAuth2Implicit:
      #       - product_write
      #   - eccubeOAuth2AuthorizationCode:
      #       - product_write
      #   - eccubeOpenIDConnectImplicit:
      #       - product_write
      #   - eccubeOpenIDConnectAuthorizationCode:
      #       - product_write
  /<base-endpoint>/<base-version>/product/{id}:
    get:
      tags:
        - CRUD
      description: dtb_product をID指定で取得します。
      parameters:
        -
          name: id
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
    put:
      tags:
        - CRUD
      description: dtb_product を更新します。
      parameters:
        -
          name: id
          in: path
          description: 商品ID
          required: true
          type: integer
        -
          in: body
          name: body
          description: Product object that needs to be updated to the EC-CUBE.
          required: true
          schema:
            type: object
            required:
              - name
              - Creator
            properties:
              name:
                type: string
                example: 商品名
              note:
                type: string
                example: 備考
              description_list:
                type: string
                example: 商品一覧に表示する説明
              description_detail:
                type: string
                example: 商品詳細に表示する説明
              search_word:
                type: string
                example: 検索キーワード
              free_area:
                type: string
                example: フリーワード
              del_flg:
                type: integer
                format: int16
              Creator:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 2
              Status:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
      responses:
        # Response code
        204:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
      # security:
      #   - eccubeOAuth2Implicit:
      #       - product_write
      #   - eccubeOAuth2AuthorizationCode:
      #       - product_write
      #   - eccubeOpenIDConnectImplicit:
      #       - product_write
      #   - eccubeOpenIDConnectAuthorizationCode:
      #       - product_write
    delete:
      tags:
        - CRUD
      description: dtb_product をID指定で論理削除します。
      parameters:
        -
          name: id
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        # Response code
        204:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
  /OAuth2/<base-version>/userinfo:
    get:
      tags:
        - Authorization
      description: OpenID Connect UserInfo エンドポイント. エンドユーザーの個人情報を提供します.
      parameters:
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/userinfo'
  /<admin_dir>/OAuth2/<base-version>/authorize:
    get:
      tags:
        - Authorization
      description: Member 用 Authorization エンドポイント
      parameters:
        - name: client_id
          in: query
          description: client_id
          type: string
          required: true
        - name: redirect_uri
          in: query
          description: リダイレクトURI
          type: string
          format: url
          required: true
        - name: response_type
          in: query
          description: レスポンスタイプ
          type: string
          example: code
          required: true
        - name: state
          in: query
          description: CSRFチェック用 state パラメータ
          type: string
          required: true
        - name: scope
          in: query
          type: string
          description: 認可要求するスコープ文字列。複数の場合はスペース区切りで記述する。
          example: openid%20offline_access%20product_read
        - name: nonce
          in: query
          type: string
          description: リプレイアタックチェック用 nonce パラメータ
      responses:
        200:
          description: 認可要求画面を表示する。認可要求が完了した場合、 redirect_uri に response_type で指定したパラメータを付与し、リダイレクトする。
    post:
      tags:
        - Authorization
      description: Member 用 Authorization エンドポイント
      parameters:
        - name: client_id
          in: formData
          description: client_id
          type: string
          required: true
        - name: redirect_uri
          in: formData
          description: リダイレクトURI
          type: string
          format: url
          required: true
        - name: response_type
          in: formData
          description: レスポンスタイプ
          type: string
          example: code
          required: true
        - name: state
          in: formData
          description: CSRFチェック用 state パラメータ
          type: string
          required: true
        - name: scope
          in: formData
          type: string
          description: 認可要求するスコープ文字列。複数の場合はスペース区切りで記述する。
          example: openid%20offline_access%20product_read
        - name: nonce
          in: query
          type: string
          description: リプレイアタックチェック用 nonce パラメータ
      responses:
        200:
          description: 認可要求画面を表示する。認可要求が完了した場合、 redirect_uri に response_type で指定したパラメータを付与し、リダイレクトする。
  /mypage/OAuth2/<base-version>/authorize:
    get:
      tags:
        - Authorization
      description: Customer 用 Authorization エンドポイント
      parameters:
        - name: client_id
          in: query
          description: client_id
          type: string
          required: true
        - name: redirect_uri
          in: query
          description: リダイレクトURI
          type: string
          format: url
          required: true
        - name: response_type
          in: query
          description: レスポンスタイプ
          type: string
          example: code
          required: true
        - name: state
          in: query
          description: CSRFチェック用 state パラメータ
          type: string
          required: true
        - name: scope
          in: query
          type: string
          description: 認可要求するスコープ文字列。複数の場合はスペース区切りで記述する。
          example: openid%20offline_access%20product_read
        - name: nonce
          in: query
          type: string
          description: リプレイアタックチェック用 nonce パラメータ
      responses:
        200:
          description: 認可要求画面を表示する。認可要求が完了した場合、 redirect_uri に response_type で指定したパラメータを付与し、リダイレクトする。
    post:
      tags:
        - Authorization
      description: Customer 用 Authorization エンドポイント
      parameters:
        - name: client_id
          in: formData
          description: client_id
          type: string
          required: true
        - name: redirect_uri
          in: formData
          description: リダイレクトURI
          type: string
          format: url
          required: true
        - name: response_type
          in: formData
          description: レスポンスタイプ
          type: string
          example: code
          required: true
        - name: state
          in: formData
          description: CSRFチェック用 state パラメータ
          type: string
          required: true
        - name: scope
          in: formData
          type: string
          description: 認可要求するスコープ文字列。複数の場合はスペース区切りで記述する。
          example: openid%20offline_access%20product_read
        - name: nonce
          in: query
          type: string
          description: リプレイアタックチェック用 nonce パラメータ
      responses:
        200:
          description: 認可要求画面を表示する。認可要求が完了した場合、 redirect_uri に response_type で指定したパラメータを付与し、リダイレクトする。
  /OAuth2/<base-version>/token:
    post:
      tags:
        - Authorization
      description: Token エンドポイント。アクセストークン及び、リフレッシュトークン、 id_token を取得する。
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Basic 認証スキームを使用し、 client_id:client_secret を Base64 エンコーディングした文字列を送信する
          example: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
          required: true
        - name: grant_type
          in: formData
          type: string
          description: 認可形式
          example: authorization_code
          required: true
        - name: code
          in: formData
          type: string
          description: Authorization code の文字列
          example: 88187509bc2d240bfa971c608e7884e39b8a5660
        - name: redirect_uri
          in: formData
          type: string
          description: リダイレクトURI
        - name: refresh_token
          in: formData
          type: string
          description: リフレッシュトークン
      responses:
        200:
          description: トークンレスポンスを返却する。以下はその一例。
          schema:
            type: object
            properties:
              access_token:
                type: string
                example: e40f3cb306c937ef80565638ae0fad816840a4ec
                description: アクセスークン
              token_type:
                type: string
                example: Bearer
                description: 認証スキーム
              refresh_token:
                type: string
                example: ccaf1161ed5d13860396816923dd66c1a4d1b32a
                description: リフレッシュトークン。有効期限切れ
              expires_in:
                type: integer
                example: 3600
                description: アクセストークンの有効期限
              scope:
                type: string
                example: openid offline_access
                description: 認可されたスコープ
              id_token:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xOTIuMTY4LjU2LjEwMTo4MDgxIiwic3ViIjoiNG53c25ic3pJSDRYdVFuWHdpZ3RQOEhhS1FwamVHeDQ5OXMwQTlJMXFrbyIsImF1ZCI6IjJlODE1MzAyM2Q2YWZiMmZiMjk5MzFkYmY5YTI3NWVkNDcxNWYzODQiLCJpYXQiOjE0NjA1MzU1MjMsImV4cCI6MTQ2MDUzOTEyMywiYXV0aF90aW1lIjoxNDYwNTM1NTIzLCJub25jZSI6InJhbmRvbV9ub25jZSJ9.D3RE1i-Oc_bCANI28BwqT-6voLk645kqGZCs3PCOfDRATUX6_hvyBOc3PvfrH6BCaNfYX8m8sGQPD2g-GRUJ-j6OMCHp1KHcycsN5OS6QoZOucvM_gDKITivwW0q3BvLYsc-zK00DRlYuAhSW1pCqdWGRGk-3LWbqfasttYvx34KoSazfCsIyMqxC_zQ4qDoYaReeuCjiMX1xW3vXueEidMQ9_5s7SQgJwtwMnqOdDoEHUQce65wWa2yNXBHaohrGwXmg9Sbd5pD_Anhrh7WIAnYEbDoHc1rb40oUT-kye5cplYUTd4F9y88PnyXeWN3-vGRVxsvMRdJQmiTqzwVvA
                description: id_token の文字列
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errors'
  /OAuth2/<base-version>/tokeninfo:
    get:
      tags:
        - Authorization
      description: Tokeninfo エンドポイント。id_token の詳細情報を返却します。
      parameters:
        - name: id_token
          in: query
          type: string
          description: id_token の文字列
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xOTIuMTY4LjU2LjEwMTo4MDgxIiwic3ViIjoiNG53c25ic3pJSDRYdVFuWHdpZ3RQOEhhS1FwamVHeDQ5OXMwQTlJMXFrbyIsImF1ZCI6IjJlODE1MzAyM2Q2YWZiMmZiMjk5MzFkYmY5YTI3NWVkNDcxNWYzODQiLCJpYXQiOjE0NjA1MzU1MjMsImV4cCI6MTQ2MDUzOTEyMywiYXV0aF90aW1lIjoxNDYwNTM1NTIzLCJub25jZSI6InJhbmRvbV9ub25jZSJ9.D3RE1i-Oc_bCANI28BwqT-6voLk645kqGZCs3PCOfDRATUX6_hvyBOc3PvfrH6BCaNfYX8m8sGQPD2g-GRUJ-j6OMCHp1KHcycsN5OS6QoZOucvM_gDKITivwW0q3BvLYsc-zK00DRlYuAhSW1pCqdWGRGk-3LWbqfasttYvx34KoSazfCsIyMqxC_zQ4qDoYaReeuCjiMX1xW3vXueEidMQ9_5s7SQgJwtwMnqOdDoEHUQce65wWa2yNXBHaohrGwXmg9Sbd5pD_Anhrh7WIAnYEbDoHc1rb40oUT-kye5cplYUTd4F9y88PnyXeWN3-vGRVxsvMRdJQmiTqzwVvA
          required: true
      responses:
        200:
          description: ID トークンの詳細情報を返却します。
          schema:
            type: object
            properties:
              iss:
                type: string
                example: https://example.com
                description: issuer - ID トークンの発行元
              sub:
                type: string
                example: 4nwsnbszIH4XuQnXwigtP8HaKQpjeGx499s0A9I1qko
                description: subject - ユーザー識別子。 id_token の公開鍵から生成される。
              aud:
                type: string
                example: 2e8153023d6afb2fb29931dbf9a275ed4715f384
                description: ID トークンの想定されるオーディエンス。 OAuth2.0 Client ID が使用される。
              iat:
                type: string
                example: 1460535523
                description: ID トークン発行時刻の UNIX タイムスタンプ。
              exp:
                type: string
                example: 1460539123
                description: ID トークン有効期限の UNIX タイムスタンプ。
              auth_time:
                type: string
                example: 1460535523
                description: 認証の発生時刻の UNIX タイムスタンプ。
              nonce:
                type: string
                description: クライアントセッションの識別子。リプレイスアタック防止のために使用する。
##################################################################################
##################################################################################
##################################################################################
## 以下v0用記述サンプル
  # /products:
  #   # This is a HTTP operation
  #   get:
  #     # Describe this verb here. Note: you can use markdown
  #     description: 公開されている商品一覧を取得します。
  #     # This is array of GET operation parameters:
  #     parameters:
  #       # An example parameter that is in query and is required
  #       -
  #         name: category_id
  #         in: query
  #         description: カテゴリーID
  #         required: false
  #         type: integer
  #       -
  #         name: name
  #         in: query
  #         description: 商品名
  #         required: false
  #         type: string
  #       -
  #         name: pageno
  #         in: query
  #         description: ページ番号
  #         required: false
  #         type: integer
  #       -
  #         name: disp_number
  #         in: query
  #         description: 表示件数
  #         required: false
  #         type: integer
  #       -
  #         name: orderby
  #         in: query
  #         description: 並び順
  #         required: false
  #         type: integer

  #     # Expected responses for this operation:
  #     responses:
  #       # Response code
  #       200:
  #         description: Successful response
  #         # A schema describing your response object.
  #         # Use JSON Schema format
  #         schema:
  #           type: array
  #           items:
  #             title: product
  #             type: object
  #       default:
  #         description: unexpected error
  #         schema:
  #           $ref: '#/definitions/errors'
  # /products/{id}:
  #   get:
  #     description: 公開されている商品詳細を取得します。
  #     parameters:
  #       -
  #         name: id
  #         in: path
  #         description: 商品ID
  #         required: true
  #         type: integer
  #     responses:
  #       200:
  #         description: Successful response
  #         schema:
  #           type: object
  #           required:
  #             - id
  #           properties:
  #             id:
  #               type: integer
  #               format: int64
  #             name:
  #               type: string
  #       default:
  #         description: unexpected error
  #         schema:
  #           $ref: '#/definitions/errors'
  # /productsauthsample/{id}:
  #   get:
  #     description: 公開されている商品詳細を取得します。
  #     parameters:
  #       -
  #         name: id
  #         in: path
  #         description: 商品ID
  #         required: true
  #         type: integer
  #     responses:
  #       200:
  #         description: Successful response
  #         schema:
  #           type: object
  #           required:
  #             - id
  #           properties:
  #             id:
  #               type: integer
  #               format: int64
  #             name:
  #               type: string
  #       default:
  #         description: unexpected error
  #         schema:
  #          $ref: '#/definitions/errors'
## 記述サンプルここまで
##################################################################################
##################################################################################
##################################################################################
securityDefinitions:
  eccubeOpenIDConnectImplicit:
    type: oauth2
    description: OpenID Connect Authentication using the Implicit Flow.
    scopes:
      openid:
      offline_access:
      profile:
      email:
      address:
      phone:
      csv_type_read:
      customer_order_status_read:
      customer_status_read:
      db_read:
      device_type_read:
      disp_read:
      job_read:
      order_status_read:
      order_status_color_read:
      page_max_read:
      pref_read:
      product_list_max_read:
      product_list_order_by_read:
      product_type_read:
      sex_read:
      tag_read:
      taxrule_read:
      work_read:
      shipment_item_read:
      shipping_read:
      tax_rule_read:
      template_read:
      authority_role_read:
      base_info_read:
      block_read:
      block_position_read:
      category_read:
      class_category_read:
      class_name_read:
      csv_read:
      customer_read:
      customer_address_read:
      customer_favorite_product_read:
      delivery_read:
      delivery_date_read:
      delivery_fee_read:
      delivery_time_read:
      help_read:
      mail_history_read:
      mail_template_read:
      member_read:
      news_read:
      order_read:
      order_detail_read:
      page_layout_read:
      payment_read:
      payment_option_read:
      plugin_read:
      plugin_event_handler_read:
      product_read:
      product_category_read:
      product_class_read:
      product_image_read:
      product_stock_read:
      product_tag_read:
      csv_type_write:
      customer_order_status_write:
      customer_status_write:
      db_write:
      device_type_write:
      disp_write:
      job_write:
      order_status_write:
      order_status_color_write:
      page_max_write:
      pref_write:
      product_list_max_write:
      product_list_order_by_write:
      product_type_write:
      sex_write:
      tag_write:
      taxrule_write:
      work_write:
      shipment_item_write:
      shipping_write:
      tax_rule_write:
      template_write:
      authority_role_write:
      base_info_write:
      block_write:
      block_position_write:
      category_write:
      class_category_write:
      class_name_write:
      csv_write:
      customer_write:
      customer_address_write:
      customer_favorite_product_write:
      delivery_write:
      delivery_date_write:
      delivery_fee_write:
      delivery_time_write:
      help_write:
      mail_history_write:
      mail_template_write:
      member_write:
      news_write:
      order_write:
      order_detail_write:
      page_layout_write:
      payment_write:
      payment_option_write:
      plugin_write:
      plugin_event_handler_write:
      product_write:
      product_category_write:
      product_class_write:
      product_image_write:
      product_stock_write:
      product_tag_write:
    flow: implicit
    authorizationUrl: https://<your-host-name>/<admin_dir>/OAuth2/<base-version>/authorize
definitions:
  errors:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  product:
    type: object
    required:
      - name
      - Creator
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        example: 商品名
      note:
        type: string
        example: 備考
      description_list:
        type: string
        example: 商品一覧に表示する説明
      description_detail:
        type: string
        example: 商品詳細に表示する説明
      search_word:
        type: string
        example: 検索キーワード
      free_area:
        type: string
        example: フリーワード
      del_flg:
        type: integer
        format: int16
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
      ProductCategories:
        type: array
        items:
          type: object
          properties:
            product_id:
              type: integer
              format: int32
            category_id:
              type: integer
              format: int32
      Creator:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 2
      Status:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      ProductClass:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
      ProductImage:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
  userinfo:
    type: object
    required:
      - sub
    properties:
      sub:
        type: string
        description: Subject - Issuer における End-User の識別子。開鍵の指紋を設定する. Self-Issued ID Token Validation に準拠した形式。
        example: 9BrQlfDWfCu-gzrPiRtoafR5Yfw_koTePaXs4dfu-l4
      name:
        type: string
        example: 山田 太郎
      family_name:
        type: string
        example: 山田
      given_name:
        type: string
        example: 太郎
      middle_name:
        type: string
      nickname:
        type: string
      preferred_username:
        type: string
        example: user@example.com
        description: 識別名。 ログインユーザーID が設定される
      profile:
        type: string
      picture:
        type: string
      website:
        type: string
        format: url
      gender:
        type: string
        example: 男性
      birthdate:
        type: string
        format: date
        example: 1980-01-01
      zoneinfo:
        type: string
      locale:
        type: string
      updated_at:
        type: string
        format: date-time
        example: 2016-06-16T00:00:00Z
      email:
        type: string
        format: email
        example: user@example.com
      email_verified:
        type: boolean
        example: false
      address:
        type: object
        schema:
          $ref: '#/definitions/address'
      phone_number:
        type: string
        example: 000-000-000
      phone_number_verified:
        type: boolean
        example: false
  address:
    type: object
    properties:
      formatted:
        type: string
        example: |
          530-0001
          大阪府大阪市梅田2丁目0-0
      street_address:
        type: string
        example: 梅田2丁目0-0
      locality:
        type: string
        example: 大阪市
      region:
        type: string
        example: 大阪府
      postal_code:
        type: string
        example: 530-0001
      country:
        type: string
        example: 日本
