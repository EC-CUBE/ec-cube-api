<?php

namespace Plugin\EccubeApi\Repository\OAuth2\OpenID;

use Doctrine\ORM\EntityRepository;
use OAuth2\OpenID\Storage\UserClaimsInterface;

/**
 * UserInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserInfoRepository extends EntityRepository implements UserClaimsInterface
{
    // TODO implements user claims
    public function getUserClaims($sub, $scope) {
        $UserInfo =  $this->findOneBy(array('sub' => $sub));
        if (!is_object($UserInfo)) {
            return array();
        }
        if (is_object($UserInfo->getCustomer())) {
            $UserInfo->mergeCustomer();
        } elseif (is_object($UserInfo->getMember())) {
            $UserInfo->mergeMember();
        }
        $UserInfoAddress = $UserInfo->getAddress();
        $this->getEntityManager()->flush($UserInfoAddress);
        $this->getEntityManager()->flush($UserInfo);
        $scopes = array();
        if ($scope) {
            $scopes = explode(' ', $socpe);
        }

        return $UserInfo->toArray();
    }
}
