<?php

namespace Plugin\EccubeApi\Repository\OAuth2\OpenID;

use Doctrine\ORM\EntityRepository;
use OAuth2\OpenID\Storage\UserClaimsInterface;

/**
 * UserInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserInfoRepository extends EntityRepository implements UserClaimsInterface
{
    public function getUserClaims($user_id, $scope) {
        // UserInfo::sub ではなく UserInfo::id が渡ってくることに注意
        $UserInfo =  $this->find($user_id);
        if (!is_object($UserInfo)) {
            return array();
        }
        if (is_object($UserInfo->getCustomer())) {
            $UserInfo->mergeCustomer();
        } elseif (is_object($UserInfo->getMember())) {
            $UserInfo->mergeMember();
        }
        $UserInfoAddress = $UserInfo->getAddress();
        $this->getEntityManager()->flush($UserInfoAddress);
        $this->getEntityManager()->flush($UserInfo);
        $scopes = array();
        if ($scope) {
            $scopes = explode(' ', $scope);
        }

        $Results = $UserInfo->toArrayByClaims();

        if (in_array('profile', $scopes)) {
            $Results = array_merge($Results, $UserInfo->toArrayByClaims('profile'));
        }
        if (in_array('email', $scopes)) {
            $Results = array_merge($Results, $UserInfo->toArrayByClaims('email'));
        }
        if (in_array('address', $scopes)) {
            $Results = array_merge($Results, $UserInfo->toArrayByClaims('address'));
        }
        if (in_array('phone', $scopes)) {
            $Results = array_merge($Results, $UserInfo->toArrayByClaims('phone'));
        }

        return $Results;
    }
}
